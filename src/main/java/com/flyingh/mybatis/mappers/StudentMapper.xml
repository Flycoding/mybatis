<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
	"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.flyingh.mybatis.mappers.StudentMapper">
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="dob" column="dob" />
	</resultMap>

	<resultMap type="address" id="AddressResult">
		<id property="addrId" column="addr_id" />
		<result property="city" column="city" />
		<result property="zip" column="zip" />
	</resultMap>

	<resultMap type="book" id="BookResult">
		<id property="bookId" column="book_id" />
		<result property="name" column="book_name" />
		<result property="price" column="price" />
	</resultMap>

	<resultMap type="Student" id="StudentWithAddressResult" extends="StudentResult">
		<!-- <association property="address" javaType="address"> -->
		<!-- <id property="addrId" column="addr_id" /> -->
		<!-- <result property="city" column="city" /> -->
		<!-- <result property="zip" column="zip" /> -->
		<!-- </association> -->
		<association property="address" resultMap="AddressResult"></association>
	</resultMap>

	<resultMap type="student" id="StudentWithAddressAndBookResult" extends="StudentResult">
		<association property="address" resultMap="AddressResult"></association>
		<collection property="books" resultMap="BookResult"></collection>
	</resultMap>

	<resultMap type="student" id="AnotherStudentWithAddressAndBookResult" extends="StudentResult">
		<association property="address" column="addr_id" select="findAddressById"></association>
		<collection property="books" column="stud_id" select="findBooksByStudentId"></collection>
	</resultMap>
	<select id="findBooksByStudentId" resultMap="BookResult" parameterType="_int">
		select * from books where stud_id=#{id}
	</select>
	<select id="anotherFindAllWithAddressAndBooks" resultMap="AnotherStudentWithAddressAndBookResult">
		select * from students
	</select>

	<select id="findWithAddressAndBooks" resultMap="StudentWithAddressAndBookResult" parameterType="int">
		select
		s.stud_id,s.name,s.email,s.dob,s.addr_id,a.city,a.zip,b.book_id,b.book_name,b.price
		from students s
		left outer join address a on s.addr_id=a.addr_id
		left outer join books b on s.stud_id=b.stud_id
		where s.stud_id=#{id}
	</select>

	<resultMap type="student" id="AnotherStudentWithAddressResult" extends="StudentResult">
		<association property="address" column="addr_id" select="findAddressById"></association>
	</resultMap>
	<select id="findAddressById" parameterType="int" resultMap="AddressResult">
		select * from address where addr_id=#{id}
	</select>

	<select id="anotherFindAllWithAddress" resultMap="AnotherStudentWithAddressResult">
		select * from students
	</select>

	<select id="findAllWithAddress" resultMap="StudentWithAddressResult">
		select s.*,a.* from
		students s,address a where s.addr_id=a.addr_id
	</select>

	<select id="findStudentWithAddress" parameterType="int" resultMap="StudentWithAddressResult">
		select stud_id,name,email,dob,s.addr_id,city,zip from
		students s left outer
		join address a on s.addr_id=a.addr_id
		where
		stud_id=#{id}
	</select>

	<select id="findAll" resultMap="StudentResult">
		select * from students
	</select>
	<select id="findById" parameterType="int" resultType="Student">
		select
		stud_id as
		studId,name,email,dob from students where stud_id=#{id}
	</select>
	<insert id="insert" parameterType="Student" useGeneratedKeys="true" keyProperty="studId">
		insert into
		students(name,email,dob)
		values(#{name},#{email},#{dob})
	</insert>
	<update id="update" parameterType="Student">
		update students set
		name=#{name},email=#{email},dob=#{dob} where stud_id=#{studId}
	</update>
	<delete id="delete" parameterType="int">
		delete from students where
		stud_id=#{studId}
	</delete>

</mapper>